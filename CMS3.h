// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/home/users/jguiang/projects/MT2Analysis/MyLooper/data/data_Run2017B_31Mar2018_data_Run2017B_JetHT.root", "mt2", "CMS3", "tas", "cms3")

#ifndef CMS3_H
#define CMS3_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class CMS3 {
 private: 
 protected: 
  unsigned int index;
  int      run_;
  TBranch *run_branch;
  bool     run_isLoaded;
  int      lumi_;
  TBranch *lumi_branch;
  bool     lumi_isLoaded;
  unsigned long long evt_;
  TBranch *evt_branch;
  bool     evt_isLoaded;
  int      isData_;
  TBranch *isData_branch;
  bool     isData_isLoaded;
  int      isGolden_;
  TBranch *isGolden_branch;
  bool     isGolden_isLoaded;
  float    evt_scale1fb_;
  TBranch *evt_scale1fb_branch;
  bool     evt_scale1fb_isLoaded;
  float    evt_xsec_;
  TBranch *evt_xsec_branch;
  bool     evt_xsec_isLoaded;
  float    evt_kfactor_;
  TBranch *evt_kfactor_branch;
  bool     evt_kfactor_isLoaded;
  float    evt_filter_;
  TBranch *evt_filter_branch;
  bool     evt_filter_isLoaded;
  unsigned long long evt_nEvts_;
  TBranch *evt_nEvts_branch;
  bool     evt_nEvts_isLoaded;
  int      evt_id_;
  TBranch *evt_id_branch;
  bool     evt_id_isLoaded;
  float    genWeight_;
  TBranch *genWeight_branch;
  bool     genWeight_isLoaded;
  float    puWeight_;
  TBranch *puWeight_branch;
  bool     puWeight_isLoaded;
  int      nVert_;
  TBranch *nVert_branch;
  bool     nVert_isLoaded;
  int      nTrueInt_;
  TBranch *nTrueInt_branch;
  bool     nTrueInt_isLoaded;
  float    rho_;
  TBranch *rho_branch;
  bool     rho_isLoaded;
  int      nJet30_;
  TBranch *nJet30_branch;
  bool     nJet30_isLoaded;
  int      nJet30JECup_;
  TBranch *nJet30JECup_branch;
  bool     nJet30JECup_isLoaded;
  int      nJet30JECdn_;
  TBranch *nJet30JECdn_branch;
  bool     nJet30JECdn_isLoaded;
  int      nJet40_;
  TBranch *nJet40_branch;
  bool     nJet40_isLoaded;
  int      nBJet20_;
  TBranch *nBJet20_branch;
  bool     nBJet20_isLoaded;
  int      nBJet20csv_;
  TBranch *nBJet20csv_branch;
  bool     nBJet20csv_isLoaded;
  int      nBJet20mva_;
  TBranch *nBJet20mva_branch;
  bool     nBJet20mva_isLoaded;
  int      nBJet20JECup_;
  TBranch *nBJet20JECup_branch;
  bool     nBJet20JECup_isLoaded;
  int      nBJet20JECdn_;
  TBranch *nBJet20JECdn_branch;
  bool     nBJet20JECdn_isLoaded;
  int      nBJet25_;
  TBranch *nBJet25_branch;
  bool     nBJet25_isLoaded;
  int      nBJet30_;
  TBranch *nBJet30_branch;
  bool     nBJet30_isLoaded;
  int      nBJet30csv_;
  TBranch *nBJet30csv_branch;
  bool     nBJet30csv_isLoaded;
  int      nBJet30mva_;
  TBranch *nBJet30mva_branch;
  bool     nBJet30mva_isLoaded;
  int      nBJet40_;
  TBranch *nBJet40_branch;
  bool     nBJet40_isLoaded;
  int      nJet30FailId_;
  TBranch *nJet30FailId_branch;
  bool     nJet30FailId_isLoaded;
  int      nJet100FailId_;
  TBranch *nJet100FailId_branch;
  bool     nJet100FailId_isLoaded;
  int      nJet20BadFastsim_;
  TBranch *nJet20BadFastsim_branch;
  bool     nJet20BadFastsim_isLoaded;
  int      nJet200MuFrac50DphiMet_;
  TBranch *nJet200MuFrac50DphiMet_branch;
  bool     nJet200MuFrac50DphiMet_isLoaded;
  int      nMuons10_;
  TBranch *nMuons10_branch;
  bool     nMuons10_isLoaded;
  int      nBadMuons20_;
  TBranch *nBadMuons20_branch;
  bool     nBadMuons20_isLoaded;
  int      nElectrons10_;
  TBranch *nElectrons10_branch;
  bool     nElectrons10_isLoaded;
  int      nLepLowMT_;
  TBranch *nLepLowMT_branch;
  bool     nLepLowMT_isLoaded;
  int      nTaus20_;
  TBranch *nTaus20_branch;
  bool     nTaus20_isLoaded;
  int      nGammas20_;
  TBranch *nGammas20_branch;
  bool     nGammas20_isLoaded;
  int      nPFCHCand3_;
  TBranch *nPFCHCand3_branch;
  bool     nPFCHCand3_isLoaded;
  float    deltaPhiMin_;
  TBranch *deltaPhiMin_branch;
  bool     deltaPhiMin_isLoaded;
  float    deltaPhiMin_genmet_;
  TBranch *deltaPhiMin_genmet_branch;
  bool     deltaPhiMin_genmet_isLoaded;
  float    diffMetMht_;
  TBranch *diffMetMht_branch;
  bool     diffMetMht_isLoaded;
  float    diffMetMht_genmet_;
  TBranch *diffMetMht_genmet_branch;
  bool     diffMetMht_genmet_isLoaded;
  float    deltaPhiMinJECup_;
  TBranch *deltaPhiMinJECup_branch;
  bool     deltaPhiMinJECup_isLoaded;
  float    deltaPhiMinJECdn_;
  TBranch *deltaPhiMinJECdn_branch;
  bool     deltaPhiMinJECdn_isLoaded;
  float    diffMetMhtJECup_;
  TBranch *diffMetMhtJECup_branch;
  bool     diffMetMhtJECup_isLoaded;
  float    diffMetMhtJECdn_;
  TBranch *diffMetMhtJECdn_branch;
  bool     diffMetMhtJECdn_isLoaded;
  float    minMTBMet_;
  TBranch *minMTBMet_branch;
  bool     minMTBMet_isLoaded;
  float    zll_minMTBMet_;
  TBranch *zll_minMTBMet_branch;
  bool     zll_minMTBMet_isLoaded;
  float    gamma_minMTBMet_;
  TBranch *gamma_minMTBMet_branch;
  bool     gamma_minMTBMet_isLoaded;
  float    ht_;
  TBranch *ht_branch;
  bool     ht_isLoaded;
  float    htJECup_;
  TBranch *htJECup_branch;
  bool     htJECup_isLoaded;
  float    htJECdn_;
  TBranch *htJECdn_branch;
  bool     htJECdn_isLoaded;
  float    mt2_;
  TBranch *mt2_branch;
  bool     mt2_isLoaded;
  float    mt2JECup_;
  TBranch *mt2JECup_branch;
  bool     mt2JECup_isLoaded;
  float    mt2JECdn_;
  TBranch *mt2JECdn_branch;
  bool     mt2JECdn_isLoaded;
  float    mt2_gen_;
  TBranch *mt2_gen_branch;
  bool     mt2_gen_isLoaded;
  float    mt2_genmet_;
  TBranch *mt2_genmet_branch;
  bool     mt2_genmet_isLoaded;
  float    jet1_pt_;
  TBranch *jet1_pt_branch;
  bool     jet1_pt_isLoaded;
  float    jet2_pt_;
  TBranch *jet2_pt_branch;
  bool     jet2_pt_isLoaded;
  float    jet1_ptJECup_;
  TBranch *jet1_ptJECup_branch;
  bool     jet1_ptJECup_isLoaded;
  float    jet2_ptJECup_;
  TBranch *jet2_ptJECup_branch;
  bool     jet2_ptJECup_isLoaded;
  float    jet1_ptJECdn_;
  TBranch *jet1_ptJECdn_branch;
  bool     jet1_ptJECdn_isLoaded;
  float    jet2_ptJECdn_;
  TBranch *jet2_ptJECdn_branch;
  bool     jet2_ptJECdn_isLoaded;
  int      jet_failFSveto_;
  TBranch *jet_failFSveto_branch;
  bool     jet_failFSveto_isLoaded;
  float    gamma_jet1_pt_;
  TBranch *gamma_jet1_pt_branch;
  bool     gamma_jet1_pt_isLoaded;
  float    gamma_jet2_pt_;
  TBranch *gamma_jet2_pt_branch;
  bool     gamma_jet2_pt_isLoaded;
  float    pseudoJet1_pt_;
  TBranch *pseudoJet1_pt_branch;
  bool     pseudoJet1_pt_isLoaded;
  float    pseudoJet1_eta_;
  TBranch *pseudoJet1_eta_branch;
  bool     pseudoJet1_eta_isLoaded;
  float    pseudoJet1_phi_;
  TBranch *pseudoJet1_phi_branch;
  bool     pseudoJet1_phi_isLoaded;
  float    pseudoJet1_mass_;
  TBranch *pseudoJet1_mass_branch;
  bool     pseudoJet1_mass_isLoaded;
  float    pseudoJet2_pt_;
  TBranch *pseudoJet2_pt_branch;
  bool     pseudoJet2_pt_isLoaded;
  float    pseudoJet2_eta_;
  TBranch *pseudoJet2_eta_branch;
  bool     pseudoJet2_eta_isLoaded;
  float    pseudoJet2_phi_;
  TBranch *pseudoJet2_phi_branch;
  bool     pseudoJet2_phi_isLoaded;
  float    pseudoJet2_mass_;
  TBranch *pseudoJet2_mass_branch;
  bool     pseudoJet2_mass_isLoaded;
  float    mht_pt_;
  TBranch *mht_pt_branch;
  bool     mht_pt_isLoaded;
  float    mht_phi_;
  TBranch *mht_phi_branch;
  bool     mht_phi_isLoaded;
  float    mht_ptJECup_;
  TBranch *mht_ptJECup_branch;
  bool     mht_ptJECup_isLoaded;
  float    mht_phiJECup_;
  TBranch *mht_phiJECup_branch;
  bool     mht_phiJECup_isLoaded;
  float    mht_ptJECdn_;
  TBranch *mht_ptJECdn_branch;
  bool     mht_ptJECdn_isLoaded;
  float    mht_phiJECdn_;
  TBranch *mht_phiJECdn_branch;
  bool     mht_phiJECdn_isLoaded;
  float    met_pt_;
  TBranch *met_pt_branch;
  bool     met_pt_isLoaded;
  float    met_phi_;
  TBranch *met_phi_branch;
  bool     met_phi_isLoaded;
  float    met_ptJECup_;
  TBranch *met_ptJECup_branch;
  bool     met_ptJECup_isLoaded;
  float    met_phiJECup_;
  TBranch *met_phiJECup_branch;
  bool     met_phiJECup_isLoaded;
  float    met_ptJECdn_;
  TBranch *met_ptJECdn_branch;
  bool     met_ptJECdn_isLoaded;
  float    met_phiJECdn_;
  TBranch *met_phiJECdn_branch;
  bool     met_phiJECdn_isLoaded;
  float    met_rawPt_;
  TBranch *met_rawPt_branch;
  bool     met_rawPt_isLoaded;
  float    met_rawPhi_;
  TBranch *met_rawPhi_branch;
  bool     met_rawPhi_isLoaded;
  float    met_caloPt_;
  TBranch *met_caloPt_branch;
  bool     met_caloPt_isLoaded;
  float    met_caloPhi_;
  TBranch *met_caloPhi_branch;
  bool     met_caloPhi_isLoaded;
  float    met_trkPt_;
  TBranch *met_trkPt_branch;
  bool     met_trkPt_isLoaded;
  float    met_trkPhi_;
  TBranch *met_trkPhi_branch;
  bool     met_trkPhi_isLoaded;
  float    met_genPt_;
  TBranch *met_genPt_branch;
  bool     met_genPt_isLoaded;
  float    met_genPhi_;
  TBranch *met_genPhi_branch;
  bool     met_genPhi_isLoaded;
  float    met_miniaodPt_;
  TBranch *met_miniaodPt_branch;
  bool     met_miniaodPt_isLoaded;
  float    met_miniaodPhi_;
  TBranch *met_miniaodPhi_branch;
  bool     met_miniaodPhi_isLoaded;
  int      Flag_EcalDeadCellTriggerPrimitiveFilter_;
  TBranch *Flag_EcalDeadCellTriggerPrimitiveFilter_branch;
  bool     Flag_EcalDeadCellTriggerPrimitiveFilter_isLoaded;
  int      Flag_trkPOG_manystripclus53X_;
  TBranch *Flag_trkPOG_manystripclus53X_branch;
  bool     Flag_trkPOG_manystripclus53X_isLoaded;
  int      Flag_ecalLaserCorrFilter_;
  TBranch *Flag_ecalLaserCorrFilter_branch;
  bool     Flag_ecalLaserCorrFilter_isLoaded;
  int      Flag_trkPOG_toomanystripclus53X_;
  TBranch *Flag_trkPOG_toomanystripclus53X_branch;
  bool     Flag_trkPOG_toomanystripclus53X_isLoaded;
  int      Flag_hcalLaserEventFilter_;
  TBranch *Flag_hcalLaserEventFilter_branch;
  bool     Flag_hcalLaserEventFilter_isLoaded;
  int      Flag_trkPOG_logErrorTooManyClusters_;
  TBranch *Flag_trkPOG_logErrorTooManyClusters_branch;
  bool     Flag_trkPOG_logErrorTooManyClusters_isLoaded;
  int      Flag_trkPOGFilters_;
  TBranch *Flag_trkPOGFilters_branch;
  bool     Flag_trkPOGFilters_isLoaded;
  int      Flag_trackingFailureFilter_;
  TBranch *Flag_trackingFailureFilter_branch;
  bool     Flag_trackingFailureFilter_isLoaded;
  int      Flag_CSCTightHalo2015Filter_;
  TBranch *Flag_CSCTightHalo2015Filter_branch;
  bool     Flag_CSCTightHalo2015Filter_isLoaded;
  int      Flag_CSCTightHaloFilter_;
  TBranch *Flag_CSCTightHaloFilter_branch;
  bool     Flag_CSCTightHaloFilter_isLoaded;
  int      Flag_globalTightHalo2016Filter_;
  TBranch *Flag_globalTightHalo2016Filter_branch;
  bool     Flag_globalTightHalo2016Filter_isLoaded;
  int      Flag_globalSuperTightHalo2016Filter_;
  TBranch *Flag_globalSuperTightHalo2016Filter_branch;
  bool     Flag_globalSuperTightHalo2016Filter_isLoaded;
  int      Flag_HBHENoiseFilter_;
  TBranch *Flag_HBHENoiseFilter_branch;
  bool     Flag_HBHENoiseFilter_isLoaded;
  int      Flag_HBHENoiseIsoFilter_;
  TBranch *Flag_HBHENoiseIsoFilter_branch;
  bool     Flag_HBHENoiseIsoFilter_isLoaded;
  int      Flag_goodVertices_;
  TBranch *Flag_goodVertices_branch;
  bool     Flag_goodVertices_isLoaded;
  int      Flag_eeBadScFilter_;
  TBranch *Flag_eeBadScFilter_branch;
  bool     Flag_eeBadScFilter_isLoaded;
  int      Flag_ecalBadCalibFilter_;
  TBranch *Flag_ecalBadCalibFilter_branch;
  bool     Flag_ecalBadCalibFilter_isLoaded;
  int      Flag_badMuonFilter_;
  TBranch *Flag_badMuonFilter_branch;
  bool     Flag_badMuonFilter_isLoaded;
  int      Flag_badMuonFilterV2_;
  TBranch *Flag_badMuonFilterV2_branch;
  bool     Flag_badMuonFilterV2_isLoaded;
  int      Flag_badMuons_;
  TBranch *Flag_badMuons_branch;
  bool     Flag_badMuons_isLoaded;
  int      Flag_duplicateMuons_;
  TBranch *Flag_duplicateMuons_branch;
  bool     Flag_duplicateMuons_isLoaded;
  int      Flag_noBadMuons_;
  TBranch *Flag_noBadMuons_branch;
  bool     Flag_noBadMuons_isLoaded;
  int      Flag_badChargedCandidateFilter_;
  TBranch *Flag_badChargedCandidateFilter_branch;
  bool     Flag_badChargedCandidateFilter_isLoaded;
  int      Flag_badChargedHadronFilter_;
  TBranch *Flag_badChargedHadronFilter_branch;
  bool     Flag_badChargedHadronFilter_isLoaded;
  int      Flag_badChargedHadronFilterV2_;
  TBranch *Flag_badChargedHadronFilterV2_branch;
  bool     Flag_badChargedHadronFilterV2_isLoaded;
  int      Flag_METFilters_;
  TBranch *Flag_METFilters_branch;
  bool     Flag_METFilters_isLoaded;
  int      HLT_PFHT1050_;
  TBranch *HLT_PFHT1050_branch;
  bool     HLT_PFHT1050_isLoaded;
  int      HLT_PFHT500_PFMET100_PFMHT100_;
  TBranch *HLT_PFHT500_PFMET100_PFMHT100_branch;
  bool     HLT_PFHT500_PFMET100_PFMHT100_isLoaded;
  int      HLT_PFHT700_PFMET85_PFMHT85_;
  TBranch *HLT_PFHT700_PFMET85_PFMHT85_branch;
  bool     HLT_PFHT700_PFMET85_PFMHT85_isLoaded;
  int      HLT_PFHT800_PFMET75_PFMHT75_;
  TBranch *HLT_PFHT800_PFMET75_PFMHT75_branch;
  bool     HLT_PFHT800_PFMET75_PFMHT75_isLoaded;
  int      HLT_PFMET170_;
  TBranch *HLT_PFMET170_branch;
  bool     HLT_PFMET170_isLoaded;
  int      HLT_PFHT300_PFMET100_;
  TBranch *HLT_PFHT300_PFMET100_branch;
  bool     HLT_PFHT300_PFMET100_isLoaded;
  int      HLT_PFHT300_PFMET110_;
  TBranch *HLT_PFHT300_PFMET110_branch;
  bool     HLT_PFHT300_PFMET110_isLoaded;
  int      HLT_PFHT350_PFMET100_;
  TBranch *HLT_PFHT350_PFMET100_branch;
  bool     HLT_PFHT350_PFMET100_isLoaded;
  int      HLT_PFHT350_PFMET120_;
  TBranch *HLT_PFHT350_PFMET120_branch;
  bool     HLT_PFHT350_PFMET120_isLoaded;
  int      HLT_PFMETNoMu90_PFMHTNoMu90_;
  TBranch *HLT_PFMETNoMu90_PFMHTNoMu90_branch;
  bool     HLT_PFMETNoMu90_PFMHTNoMu90_isLoaded;
  int      HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_;
  TBranch *HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_branch;
  bool     HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90_isLoaded;
  int      HLT_PFMETNoMu100_PFMHTNoMu100_;
  TBranch *HLT_PFMETNoMu100_PFMHTNoMu100_branch;
  bool     HLT_PFMETNoMu100_PFMHTNoMu100_isLoaded;
  int      HLT_PFMETNoMu110_PFMHTNoMu110_;
  TBranch *HLT_PFMETNoMu110_PFMHTNoMu110_branch;
  bool     HLT_PFMETNoMu110_PFMHTNoMu110_isLoaded;
  int      HLT_PFMETNoMu120_PFMHTNoMu120_;
  TBranch *HLT_PFMETNoMu120_PFMHTNoMu120_branch;
  bool     HLT_PFMETNoMu120_PFMHTNoMu120_isLoaded;
  int      HLT_PFMETNoMu130_PFMHTNoMu130_;
  TBranch *HLT_PFMETNoMu130_PFMHTNoMu130_branch;
  bool     HLT_PFMETNoMu130_PFMHTNoMu130_isLoaded;
  int      HLT_PFMETNoMu140_PFMHTNoMu140_;
  TBranch *HLT_PFMETNoMu140_PFMHTNoMu140_branch;
  bool     HLT_PFMETNoMu140_PFMHTNoMu140_isLoaded;
  int      HLT_PFMET90_PFMHT90_;
  TBranch *HLT_PFMET90_PFMHT90_branch;
  bool     HLT_PFMET90_PFMHT90_isLoaded;
  int      HLT_PFMET100_PFMHT100_;
  TBranch *HLT_PFMET100_PFMHT100_branch;
  bool     HLT_PFMET100_PFMHT100_isLoaded;
  int      HLT_PFMET110_PFMHT110_;
  TBranch *HLT_PFMET110_PFMHT110_branch;
  bool     HLT_PFMET110_PFMHT110_isLoaded;
  int      HLT_PFMET120_PFMHT120_;
  TBranch *HLT_PFMET120_PFMHT120_branch;
  bool     HLT_PFMET120_PFMHT120_isLoaded;
  int      HLT_PFMET130_PFMHT130_;
  TBranch *HLT_PFMET130_PFMHT130_branch;
  bool     HLT_PFMET130_PFMHT130_isLoaded;
  int      HLT_PFMET140_PFMHT140_;
  TBranch *HLT_PFMET140_PFMHT140_branch;
  bool     HLT_PFMET140_PFMHT140_isLoaded;
  int      HLT_PFMET100_PFMHT100_PFHT60_;
  TBranch *HLT_PFMET100_PFMHT100_PFHT60_branch;
  bool     HLT_PFMET100_PFMHT100_PFHT60_isLoaded;
  int      HLT_PFMET120_PFMHT120_PFHT60_;
  TBranch *HLT_PFMET120_PFMHT120_PFHT60_branch;
  bool     HLT_PFMET120_PFMHT120_PFHT60_isLoaded;
  int      HLT_PFJet450_;
  TBranch *HLT_PFJet450_branch;
  bool     HLT_PFJet450_isLoaded;
  int      HLT_PFJet500_;
  TBranch *HLT_PFJet500_branch;
  bool     HLT_PFJet500_isLoaded;
  int      HLT_ECALHT800_;
  TBranch *HLT_ECALHT800_branch;
  bool     HLT_ECALHT800_isLoaded;
  int      HLT_SingleMu_;
  TBranch *HLT_SingleMu_branch;
  bool     HLT_SingleMu_isLoaded;
  int      HLT_SingleMu_NonIso_;
  TBranch *HLT_SingleMu_NonIso_branch;
  bool     HLT_SingleMu_NonIso_isLoaded;
  int      HLT_SingleEl_;
  TBranch *HLT_SingleEl_branch;
  bool     HLT_SingleEl_isLoaded;
  int      HLT_SingleEl_NonIso_;
  TBranch *HLT_SingleEl_NonIso_branch;
  bool     HLT_SingleEl_NonIso_isLoaded;
  int      HLT_DoubleEl_;
  TBranch *HLT_DoubleEl_branch;
  bool     HLT_DoubleEl_isLoaded;
  int      HLT_DoubleEl33_;
  TBranch *HLT_DoubleEl33_branch;
  bool     HLT_DoubleEl33_isLoaded;
  int      HLT_MuX_Ele12_;
  TBranch *HLT_MuX_Ele12_branch;
  bool     HLT_MuX_Ele12_isLoaded;
  int      HLT_Mu8_EleX_;
  TBranch *HLT_Mu8_EleX_branch;
  bool     HLT_Mu8_EleX_isLoaded;
  int      HLT_Mu12_EleX_;
  TBranch *HLT_Mu12_EleX_branch;
  bool     HLT_Mu12_EleX_isLoaded;
  int      HLT_Mu30_Ele30_NonIso_;
  TBranch *HLT_Mu30_Ele30_NonIso_branch;
  bool     HLT_Mu30_Ele30_NonIso_isLoaded;
  int      HLT_Mu33_Ele33_NonIso_;
  TBranch *HLT_Mu33_Ele33_NonIso_branch;
  bool     HLT_Mu33_Ele33_NonIso_isLoaded;
  int      HLT_Mu37_Ele27_NonIso_;
  TBranch *HLT_Mu37_Ele27_NonIso_branch;
  bool     HLT_Mu37_Ele27_NonIso_isLoaded;
  int      HLT_Mu27_Ele37_NonIso_;
  TBranch *HLT_Mu27_Ele37_NonIso_branch;
  bool     HLT_Mu27_Ele37_NonIso_isLoaded;
  int      HLT_DoubleMu_;
  TBranch *HLT_DoubleMu_branch;
  bool     HLT_DoubleMu_isLoaded;
  int      HLT_DoubleMu_NonIso_;
  TBranch *HLT_DoubleMu_NonIso_branch;
  bool     HLT_DoubleMu_NonIso_isLoaded;
  int      HLT_Photon120_;
  TBranch *HLT_Photon120_branch;
  bool     HLT_Photon120_isLoaded;
  int      HLT_Photon200_;
  TBranch *HLT_Photon200_branch;
  bool     HLT_Photon200_isLoaded;
  int      HLT_Photon175_Prescale_;
  TBranch *HLT_Photon175_Prescale_branch;
  bool     HLT_Photon175_Prescale_isLoaded;
  int      HLT_Photon165_HE10_;
  TBranch *HLT_Photon165_HE10_branch;
  bool     HLT_Photon165_HE10_isLoaded;
  int      HLT_Photon250_NoHE_;
  TBranch *HLT_Photon250_NoHE_branch;
  bool     HLT_Photon250_NoHE_isLoaded;
  int      HLT_PFHT180_Prescale_;
  TBranch *HLT_PFHT180_Prescale_branch;
  bool     HLT_PFHT180_Prescale_isLoaded;
  int      HLT_PFHT250_Prescale_;
  TBranch *HLT_PFHT250_Prescale_branch;
  bool     HLT_PFHT250_Prescale_isLoaded;
  int      HLT_PFHT370_Prescale_;
  TBranch *HLT_PFHT370_Prescale_branch;
  bool     HLT_PFHT370_Prescale_isLoaded;
  int      HLT_PFHT430_Prescale_;
  TBranch *HLT_PFHT430_Prescale_branch;
  bool     HLT_PFHT430_Prescale_isLoaded;
  int      HLT_PFHT510_Prescale_;
  TBranch *HLT_PFHT510_Prescale_branch;
  bool     HLT_PFHT510_Prescale_isLoaded;
  int      HLT_PFHT590_Prescale_;
  TBranch *HLT_PFHT590_Prescale_branch;
  bool     HLT_PFHT590_Prescale_isLoaded;
  int      HLT_PFHT680_Prescale_;
  TBranch *HLT_PFHT680_Prescale_branch;
  bool     HLT_PFHT680_Prescale_isLoaded;
  int      HLT_PFHT780_Prescale_;
  TBranch *HLT_PFHT780_Prescale_branch;
  bool     HLT_PFHT780_Prescale_isLoaded;
  int      HLT_PFHT890_Prescale_;
  TBranch *HLT_PFHT890_Prescale_branch;
  bool     HLT_PFHT890_Prescale_isLoaded;
  int      HLT_DiCentralPFJet70_PFMET120_;
  TBranch *HLT_DiCentralPFJet70_PFMET120_branch;
  bool     HLT_DiCentralPFJet70_PFMET120_isLoaded;
  int      HLT_DiCentralPFJet55_PFMET110_;
  TBranch *HLT_DiCentralPFJet55_PFMET110_branch;
  bool     HLT_DiCentralPFJet55_PFMET110_isLoaded;
  int      nlep_;
  TBranch *nlep_branch;
  bool     nlep_isLoaded;
  float    lep_pt_;
  TBranch *lep_pt_branch;
  bool     lep_pt_isLoaded;
  float    lep_eta_;
  TBranch *lep_eta_branch;
  bool     lep_eta_isLoaded;
  float    lep_phi_;
  TBranch *lep_phi_branch;
  bool     lep_phi_isLoaded;
  float    lep_mass_;
  TBranch *lep_mass_branch;
  bool     lep_mass_isLoaded;
  int      lep_charge_;
  TBranch *lep_charge_branch;
  bool     lep_charge_isLoaded;
  int      lep_pdgId_;
  TBranch *lep_pdgId_branch;
  bool     lep_pdgId_isLoaded;
  float    lep_dxy_;
  TBranch *lep_dxy_branch;
  bool     lep_dxy_isLoaded;
  float    lep_dz_;
  TBranch *lep_dz_branch;
  bool     lep_dz_isLoaded;
  int      lep_tightId_;
  TBranch *lep_tightId_branch;
  bool     lep_tightId_isLoaded;
  int      lep_heepId_;
  TBranch *lep_heepId_branch;
  bool     lep_heepId_isLoaded;
  float    lep_highPtFit_pt_;
  TBranch *lep_highPtFit_pt_branch;
  bool     lep_highPtFit_pt_isLoaded;
  float    lep_highPtFit_eta_;
  TBranch *lep_highPtFit_eta_branch;
  bool     lep_highPtFit_eta_isLoaded;
  float    lep_highPtFit_phi_;
  TBranch *lep_highPtFit_phi_branch;
  bool     lep_highPtFit_phi_isLoaded;
  float    lep_relIso03_;
  TBranch *lep_relIso03_branch;
  bool     lep_relIso03_isLoaded;
  float    lep_relIso04_;
  TBranch *lep_relIso04_branch;
  bool     lep_relIso04_isLoaded;
  float    lep_miniRelIso_;
  TBranch *lep_miniRelIso_branch;
  bool     lep_miniRelIso_isLoaded;
  int      lep_mcMatchId_;
  TBranch *lep_mcMatchId_branch;
  bool     lep_mcMatchId_isLoaded;
  int      lep_lostHits_;
  TBranch *lep_lostHits_branch;
  bool     lep_lostHits_isLoaded;
  int      lep_convVeto_;
  TBranch *lep_convVeto_branch;
  bool     lep_convVeto_isLoaded;
  int      lep_tightCharge_;
  TBranch *lep_tightCharge_branch;
  bool     lep_tightCharge_isLoaded;
  int      nisoTrack_;
  TBranch *nisoTrack_branch;
  bool     nisoTrack_isLoaded;
  float    isoTrack_pt_;
  TBranch *isoTrack_pt_branch;
  bool     isoTrack_pt_isLoaded;
  float    isoTrack_eta_;
  TBranch *isoTrack_eta_branch;
  bool     isoTrack_eta_isLoaded;
  float    isoTrack_phi_;
  TBranch *isoTrack_phi_branch;
  bool     isoTrack_phi_isLoaded;
  float    isoTrack_mass_;
  TBranch *isoTrack_mass_branch;
  bool     isoTrack_mass_isLoaded;
  float    isoTrack_absIso_;
  TBranch *isoTrack_absIso_branch;
  bool     isoTrack_absIso_isLoaded;
  float    isoTrack_dz_;
  TBranch *isoTrack_dz_branch;
  bool     isoTrack_dz_isLoaded;
  int      isoTrack_pdgId_;
  TBranch *isoTrack_pdgId_branch;
  bool     isoTrack_pdgId_isLoaded;
  int      isoTrack_mcMatchId_;
  TBranch *isoTrack_mcMatchId_branch;
  bool     isoTrack_mcMatchId_isLoaded;
  int      nhighPtPFcands_;
  TBranch *nhighPtPFcands_branch;
  bool     nhighPtPFcands_isLoaded;
  float    highPtPFcands_pt_;
  TBranch *highPtPFcands_pt_branch;
  bool     highPtPFcands_pt_isLoaded;
  float    highPtPFcands_eta_;
  TBranch *highPtPFcands_eta_branch;
  bool     highPtPFcands_eta_isLoaded;
  float    highPtPFcands_phi_;
  TBranch *highPtPFcands_phi_branch;
  bool     highPtPFcands_phi_isLoaded;
  float    highPtPFcands_mass_;
  TBranch *highPtPFcands_mass_branch;
  bool     highPtPFcands_mass_isLoaded;
  float    highPtPFcands_absIso_;
  TBranch *highPtPFcands_absIso_branch;
  bool     highPtPFcands_absIso_isLoaded;
  float    highPtPFcands_dz_;
  TBranch *highPtPFcands_dz_branch;
  bool     highPtPFcands_dz_isLoaded;
  int      highPtPFcands_pdgId_;
  TBranch *highPtPFcands_pdgId_branch;
  bool     highPtPFcands_pdgId_isLoaded;
  int      highPtPFcands_mcMatchId_;
  TBranch *highPtPFcands_mcMatchId_branch;
  bool     highPtPFcands_mcMatchId_isLoaded;
  int      nPFLep5LowMT_;
  TBranch *nPFLep5LowMT_branch;
  bool     nPFLep5LowMT_isLoaded;
  int      nPFHad10LowMT_;
  TBranch *nPFHad10LowMT_branch;
  bool     nPFHad10LowMT_isLoaded;
  int      ntau_;
  TBranch *ntau_branch;
  bool     ntau_isLoaded;
  float    tau_pt_;
  TBranch *tau_pt_branch;
  bool     tau_pt_isLoaded;
  float    tau_eta_;
  TBranch *tau_eta_branch;
  bool     tau_eta_isLoaded;
  float    tau_phi_;
  TBranch *tau_phi_branch;
  bool     tau_phi_isLoaded;
  float    tau_mass_;
  TBranch *tau_mass_branch;
  bool     tau_mass_isLoaded;
  int      tau_charge_;
  TBranch *tau_charge_branch;
  bool     tau_charge_isLoaded;
  float    tau_dxy_;
  TBranch *tau_dxy_branch;
  bool     tau_dxy_isLoaded;
  float    tau_dz_;
  TBranch *tau_dz_branch;
  bool     tau_dz_isLoaded;
  int      tau_idCI3hit_;
  TBranch *tau_idCI3hit_branch;
  bool     tau_idCI3hit_isLoaded;
  float    tau_isoCI3hit_;
  TBranch *tau_isoCI3hit_branch;
  bool     tau_isoCI3hit_isLoaded;
  int      tau_mcMatchId_;
  TBranch *tau_mcMatchId_branch;
  bool     tau_mcMatchId_isLoaded;
  int      ngamma_;
  TBranch *ngamma_branch;
  bool     ngamma_isLoaded;
  float    gamma_pt_;
  TBranch *gamma_pt_branch;
  bool     gamma_pt_isLoaded;
  float    gamma_eta_;
  TBranch *gamma_eta_branch;
  bool     gamma_eta_isLoaded;
  float    gamma_phi_;
  TBranch *gamma_phi_branch;
  bool     gamma_phi_isLoaded;
  float    gamma_mass_;
  TBranch *gamma_mass_branch;
  bool     gamma_mass_isLoaded;
  int      gamma_mcMatchId_;
  TBranch *gamma_mcMatchId_branch;
  bool     gamma_mcMatchId_isLoaded;
  float    gamma_genIso04_;
  TBranch *gamma_genIso04_branch;
  bool     gamma_genIso04_isLoaded;
  float    gamma_drMinParton_;
  TBranch *gamma_drMinParton_branch;
  bool     gamma_drMinParton_isLoaded;
  float    gamma_chHadIso_;
  TBranch *gamma_chHadIso_branch;
  bool     gamma_chHadIso_isLoaded;
  float    gamma_neuHadIso_;
  TBranch *gamma_neuHadIso_branch;
  bool     gamma_neuHadIso_isLoaded;
  float    gamma_phIso_;
  TBranch *gamma_phIso_branch;
  bool     gamma_phIso_isLoaded;
  float    gamma_sigmaIetaIeta_;
  TBranch *gamma_sigmaIetaIeta_branch;
  bool     gamma_sigmaIetaIeta_isLoaded;
  float    gamma_r9_;
  TBranch *gamma_r9_branch;
  bool     gamma_r9_isLoaded;
  float    gamma_hOverE_;
  TBranch *gamma_hOverE_branch;
  bool     gamma_hOverE_isLoaded;
  float    gamma_hOverE015_;
  TBranch *gamma_hOverE015_branch;
  bool     gamma_hOverE015_isLoaded;
  int      gamma_idCutBased_;
  TBranch *gamma_idCutBased_branch;
  bool     gamma_idCutBased_isLoaded;
  float    gamma_mt2_;
  TBranch *gamma_mt2_branch;
  bool     gamma_mt2_isLoaded;
  int      gamma_nJet30_;
  TBranch *gamma_nJet30_branch;
  bool     gamma_nJet30_isLoaded;
  int      gamma_nJet40_;
  TBranch *gamma_nJet40_branch;
  bool     gamma_nJet40_isLoaded;
  int      gamma_nJet30FailId_;
  TBranch *gamma_nJet30FailId_branch;
  bool     gamma_nJet30FailId_isLoaded;
  int      gamma_nJet100FailId_;
  TBranch *gamma_nJet100FailId_branch;
  bool     gamma_nJet100FailId_isLoaded;
  int      gamma_nBJet20_;
  TBranch *gamma_nBJet20_branch;
  bool     gamma_nBJet20_isLoaded;
  int      gamma_nBJet20csv_;
  TBranch *gamma_nBJet20csv_branch;
  bool     gamma_nBJet20csv_isLoaded;
  int      gamma_nBJet20mva_;
  TBranch *gamma_nBJet20mva_branch;
  bool     gamma_nBJet20mva_isLoaded;
  int      gamma_nBJet25_;
  TBranch *gamma_nBJet25_branch;
  bool     gamma_nBJet25_isLoaded;
  int      gamma_nBJet30_;
  TBranch *gamma_nBJet30_branch;
  bool     gamma_nBJet30_isLoaded;
  int      gamma_nBJet40_;
  TBranch *gamma_nBJet40_branch;
  bool     gamma_nBJet40_isLoaded;
  float    gamma_ht_;
  TBranch *gamma_ht_branch;
  bool     gamma_ht_isLoaded;
  float    gamma_deltaPhiMin_;
  TBranch *gamma_deltaPhiMin_branch;
  bool     gamma_deltaPhiMin_isLoaded;
  float    gamma_diffMetMht_;
  TBranch *gamma_diffMetMht_branch;
  bool     gamma_diffMetMht_isLoaded;
  float    gamma_mht_pt_;
  TBranch *gamma_mht_pt_branch;
  bool     gamma_mht_pt_isLoaded;
  float    gamma_mht_phi_;
  TBranch *gamma_mht_phi_branch;
  bool     gamma_mht_phi_isLoaded;
  float    gamma_met_pt_;
  TBranch *gamma_met_pt_branch;
  bool     gamma_met_pt_isLoaded;
  float    gamma_met_phi_;
  TBranch *gamma_met_phi_branch;
  bool     gamma_met_phi_isLoaded;
  int      npfPhoton_;
  TBranch *npfPhoton_branch;
  bool     npfPhoton_isLoaded;
  float    pfPhoton_pt_;
  TBranch *pfPhoton_pt_branch;
  bool     pfPhoton_pt_isLoaded;
  float    pfPhoton_eta_;
  TBranch *pfPhoton_eta_branch;
  bool     pfPhoton_eta_isLoaded;
  float    pfPhoton_phi_;
  TBranch *pfPhoton_phi_branch;
  bool     pfPhoton_phi_isLoaded;
  float    zll_mt2_;
  TBranch *zll_mt2_branch;
  bool     zll_mt2_isLoaded;
  float    zll_deltaPhiMin_;
  TBranch *zll_deltaPhiMin_branch;
  bool     zll_deltaPhiMin_isLoaded;
  float    zll_diffMetMht_;
  TBranch *zll_diffMetMht_branch;
  bool     zll_diffMetMht_isLoaded;
  float    zll_met_pt_;
  TBranch *zll_met_pt_branch;
  bool     zll_met_pt_isLoaded;
  float    zll_met_phi_;
  TBranch *zll_met_phi_branch;
  bool     zll_met_phi_isLoaded;
  float    zll_mht_pt_;
  TBranch *zll_mht_pt_branch;
  bool     zll_mht_pt_isLoaded;
  float    zll_mht_phi_;
  TBranch *zll_mht_phi_branch;
  bool     zll_mht_phi_isLoaded;
  float    zll_mass_;
  TBranch *zll_mass_branch;
  bool     zll_mass_isLoaded;
  float    zll_pt_;
  TBranch *zll_pt_branch;
  bool     zll_pt_isLoaded;
  float    zll_eta_;
  TBranch *zll_eta_branch;
  bool     zll_eta_isLoaded;
  float    zll_phi_;
  TBranch *zll_phi_branch;
  bool     zll_phi_isLoaded;
  float    zll_ht_;
  TBranch *zll_ht_branch;
  bool     zll_ht_isLoaded;
  float    zll_mt2JECup_;
  TBranch *zll_mt2JECup_branch;
  bool     zll_mt2JECup_isLoaded;
  float    zll_deltaPhiMinJECup_;
  TBranch *zll_deltaPhiMinJECup_branch;
  bool     zll_deltaPhiMinJECup_isLoaded;
  float    zll_diffMetMhtJECup_;
  TBranch *zll_diffMetMhtJECup_branch;
  bool     zll_diffMetMhtJECup_isLoaded;
  float    zll_met_ptJECup_;
  TBranch *zll_met_ptJECup_branch;
  bool     zll_met_ptJECup_isLoaded;
  float    zll_met_phiJECup_;
  TBranch *zll_met_phiJECup_branch;
  bool     zll_met_phiJECup_isLoaded;
  float    zll_mht_ptJECup_;
  TBranch *zll_mht_ptJECup_branch;
  bool     zll_mht_ptJECup_isLoaded;
  float    zll_mht_phiJECup_;
  TBranch *zll_mht_phiJECup_branch;
  bool     zll_mht_phiJECup_isLoaded;
  float    zll_htJECup_;
  TBranch *zll_htJECup_branch;
  bool     zll_htJECup_isLoaded;
  float    zll_mt2JECdn_;
  TBranch *zll_mt2JECdn_branch;
  bool     zll_mt2JECdn_isLoaded;
  float    zll_deltaPhiMinJECdn_;
  TBranch *zll_deltaPhiMinJECdn_branch;
  bool     zll_deltaPhiMinJECdn_isLoaded;
  float    zll_diffMetMhtJECdn_;
  TBranch *zll_diffMetMhtJECdn_branch;
  bool     zll_diffMetMhtJECdn_isLoaded;
  float    zll_met_ptJECdn_;
  TBranch *zll_met_ptJECdn_branch;
  bool     zll_met_ptJECdn_isLoaded;
  float    zll_met_phiJECdn_;
  TBranch *zll_met_phiJECdn_branch;
  bool     zll_met_phiJECdn_isLoaded;
  float    zll_mht_ptJECdn_;
  TBranch *zll_mht_ptJECdn_branch;
  bool     zll_mht_ptJECdn_isLoaded;
  float    zll_mht_phiJECdn_;
  TBranch *zll_mht_phiJECdn_branch;
  bool     zll_mht_phiJECdn_isLoaded;
  float    zll_htJECdn_;
  TBranch *zll_htJECdn_branch;
  bool     zll_htJECdn_isLoaded;
  float    zllmt_mt2_;
  TBranch *zllmt_mt2_branch;
  bool     zllmt_mt2_isLoaded;
  float    zllmt_deltaPhiMin_;
  TBranch *zllmt_deltaPhiMin_branch;
  bool     zllmt_deltaPhiMin_isLoaded;
  float    zllmt_diffMetMht_;
  TBranch *zllmt_diffMetMht_branch;
  bool     zllmt_diffMetMht_isLoaded;
  float    zllmt_met_pt_;
  TBranch *zllmt_met_pt_branch;
  bool     zllmt_met_pt_isLoaded;
  float    zllmt_met_phi_;
  TBranch *zllmt_met_phi_branch;
  bool     zllmt_met_phi_isLoaded;
  float    zllmt_mht_pt_;
  TBranch *zllmt_mht_pt_branch;
  bool     zllmt_mht_pt_isLoaded;
  float    zllmt_mht_phi_;
  TBranch *zllmt_mht_phi_branch;
  bool     zllmt_mht_phi_isLoaded;
  float    zllmt_ht_;
  TBranch *zllmt_ht_branch;
  bool     zllmt_ht_isLoaded;
  float    zllmt_mt_;
  TBranch *zllmt_mt_branch;
  bool     zllmt_mt_isLoaded;
  float    rl_mt2_;
  TBranch *rl_mt2_branch;
  bool     rl_mt2_isLoaded;
  float    rl_deltaPhiMin_;
  TBranch *rl_deltaPhiMin_branch;
  bool     rl_deltaPhiMin_isLoaded;
  float    rl_diffMetMht_;
  TBranch *rl_diffMetMht_branch;
  bool     rl_diffMetMht_isLoaded;
  float    rl_met_pt_;
  TBranch *rl_met_pt_branch;
  bool     rl_met_pt_isLoaded;
  float    rl_met_phi_;
  TBranch *rl_met_phi_branch;
  bool     rl_met_phi_isLoaded;
  float    rl_mht_pt_;
  TBranch *rl_mht_pt_branch;
  bool     rl_mht_pt_isLoaded;
  float    rl_mht_phi_;
  TBranch *rl_mht_phi_branch;
  bool     rl_mht_phi_isLoaded;
  float    rl_mass_;
  TBranch *rl_mass_branch;
  bool     rl_mass_isLoaded;
  float    rl_pt_;
  TBranch *rl_pt_branch;
  bool     rl_pt_isLoaded;
  float    rl_eta_;
  TBranch *rl_eta_branch;
  bool     rl_eta_isLoaded;
  float    rl_phi_;
  TBranch *rl_phi_branch;
  bool     rl_phi_isLoaded;
  float    rl_ht_;
  TBranch *rl_ht_branch;
  bool     rl_ht_isLoaded;
  int      njet_;
  TBranch *njet_branch;
  bool     njet_isLoaded;
  float    jet_pt_;
  TBranch *jet_pt_branch;
  bool     jet_pt_isLoaded;
  float    jet_eta_;
  TBranch *jet_eta_branch;
  bool     jet_eta_isLoaded;
  float    jet_phi_;
  TBranch *jet_phi_branch;
  bool     jet_phi_isLoaded;
  float    jet_mass_;
  TBranch *jet_mass_branch;
  bool     jet_mass_isLoaded;
  float    jet_btagCSV_;
  TBranch *jet_btagCSV_branch;
  bool     jet_btagCSV_isLoaded;
  float    jet_btagMVA_;
  TBranch *jet_btagMVA_branch;
  bool     jet_btagMVA_isLoaded;
  float    jet_chFrac_;
  TBranch *jet_chFrac_branch;
  bool     jet_chFrac_isLoaded;
  float    jet_nhFrac_;
  TBranch *jet_nhFrac_branch;
  bool     jet_nhFrac_isLoaded;
  float    jet_cemFrac_;
  TBranch *jet_cemFrac_branch;
  bool     jet_cemFrac_isLoaded;
  float    jet_nemFrac_;
  TBranch *jet_nemFrac_branch;
  bool     jet_nemFrac_isLoaded;
  float    jet_muFrac_;
  TBranch *jet_muFrac_branch;
  bool     jet_muFrac_isLoaded;
  float    jet_rawPt_;
  TBranch *jet_rawPt_branch;
  bool     jet_rawPt_isLoaded;
  float    jet_mcPt_;
  TBranch *jet_mcPt_branch;
  bool     jet_mcPt_isLoaded;
  int      jet_mcFlavour_;
  TBranch *jet_mcFlavour_branch;
  bool     jet_mcFlavour_isLoaded;
  int      jet_hadronFlavour_;
  TBranch *jet_hadronFlavour_branch;
  bool     jet_hadronFlavour_isLoaded;
  float    jet_qgl_;
  TBranch *jet_qgl_branch;
  bool     jet_qgl_isLoaded;
  float    jet_area_;
  TBranch *jet_area_branch;
  bool     jet_area_isLoaded;
  int      jet_id_;
  TBranch *jet_id_branch;
  bool     jet_id_isLoaded;
  int      jet_puId_;
  TBranch *jet_puId_branch;
  bool     jet_puId_isLoaded;
  float    jet_muf_;
  TBranch *jet_muf_branch;
  bool     jet_muf_isLoaded;
  float    weight_lepsf_;
  TBranch *weight_lepsf_branch;
  bool     weight_lepsf_isLoaded;
  float    weight_lepsf_UP_;
  TBranch *weight_lepsf_UP_branch;
  bool     weight_lepsf_UP_isLoaded;
  float    weight_lepsf_DN_;
  TBranch *weight_lepsf_DN_branch;
  bool     weight_lepsf_DN_isLoaded;
  float    weight_lepsf_0l_;
  TBranch *weight_lepsf_0l_branch;
  bool     weight_lepsf_0l_isLoaded;
  float    weight_lepsf_0l_UP_;
  TBranch *weight_lepsf_0l_UP_branch;
  bool     weight_lepsf_0l_UP_isLoaded;
  float    weight_lepsf_0l_DN_;
  TBranch *weight_lepsf_0l_DN_branch;
  bool     weight_lepsf_0l_DN_isLoaded;
  float    weight_btagsf_;
  TBranch *weight_btagsf_branch;
  bool     weight_btagsf_isLoaded;
  float    weight_btagsf_heavy_UP_;
  TBranch *weight_btagsf_heavy_UP_branch;
  bool     weight_btagsf_heavy_UP_isLoaded;
  float    weight_btagsf_light_UP_;
  TBranch *weight_btagsf_light_UP_branch;
  bool     weight_btagsf_light_UP_isLoaded;
  float    weight_btagsf_heavy_DN_;
  TBranch *weight_btagsf_heavy_DN_branch;
  bool     weight_btagsf_heavy_DN_isLoaded;
  float    weight_btagsf_light_DN_;
  TBranch *weight_btagsf_light_DN_branch;
  bool     weight_btagsf_light_DN_isLoaded;
  float    weight_sigtrigsf_;
  TBranch *weight_sigtrigsf_branch;
  bool     weight_sigtrigsf_isLoaded;
  float    weight_dileptrigsf_;
  TBranch *weight_dileptrigsf_branch;
  bool     weight_dileptrigsf_isLoaded;
  float    weight_phottrigsf_;
  TBranch *weight_phottrigsf_branch;
  bool     weight_phottrigsf_isLoaded;
  float    weight_pu_;
  TBranch *weight_pu_branch;
  bool     weight_pu_isLoaded;
  float    weight_isr_;
  TBranch *weight_isr_branch;
  bool     weight_isr_isLoaded;
  float    weight_isr_UP_;
  TBranch *weight_isr_UP_branch;
  bool     weight_isr_UP_isLoaded;
  float    weight_isr_DN_;
  TBranch *weight_isr_DN_branch;
  bool     weight_isr_DN_isLoaded;
  float    weight_scales_UP_;
  TBranch *weight_scales_UP_branch;
  bool     weight_scales_UP_isLoaded;
  float    weight_scales_DN_;
  TBranch *weight_scales_DN_branch;
  bool     weight_scales_DN_isLoaded;
  float    weight_pdfs_UP_;
  TBranch *weight_pdfs_UP_branch;
  bool     weight_pdfs_UP_isLoaded;
  float    weight_pdfs_DN_;
  TBranch *weight_pdfs_DN_branch;
  bool     weight_pdfs_DN_isLoaded;
  float    weight_toppt_;
  TBranch *weight_toppt_branch;
  bool     weight_toppt_isLoaded;
  float    genRecoil_pt_;
  TBranch *genRecoil_pt_branch;
  bool     genRecoil_pt_isLoaded;
  float    genTop_pt_;
  TBranch *genTop_pt_branch;
  bool     genTop_pt_isLoaded;
  float    genTbar_pt_;
  TBranch *genTbar_pt_branch;
  bool     genTbar_pt_isLoaded;
  int      genProd_pdgId_;
  TBranch *genProd_pdgId_branch;
  bool     genProd_pdgId_isLoaded;
  float    weight_pol_L_;
  TBranch *weight_pol_L_branch;
  bool     weight_pol_L_isLoaded;
  float    weight_pol_R_;
  TBranch *weight_pol_R_branch;
  bool     weight_pol_R_isLoaded;
  int      nisrMatch_;
  TBranch *nisrMatch_branch;
  bool     nisrMatch_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const int &run();
  const int &lumi();
  const unsigned long long &evt();
  const int &isData();
  const int &isGolden();
  const float &evt_scale1fb();
  const float &evt_xsec();
  const float &evt_kfactor();
  const float &evt_filter();
  const unsigned long long &evt_nEvts();
  const int &evt_id();
  const float &genWeight();
  const float &puWeight();
  const int &nVert();
  const int &nTrueInt();
  const float &rho();
  const int &nJet30();
  const int &nJet30JECup();
  const int &nJet30JECdn();
  const int &nJet40();
  const int &nBJet20();
  const int &nBJet20csv();
  const int &nBJet20mva();
  const int &nBJet20JECup();
  const int &nBJet20JECdn();
  const int &nBJet25();
  const int &nBJet30();
  const int &nBJet30csv();
  const int &nBJet30mva();
  const int &nBJet40();
  const int &nJet30FailId();
  const int &nJet100FailId();
  const int &nJet20BadFastsim();
  const int &nJet200MuFrac50DphiMet();
  const int &nMuons10();
  const int &nBadMuons20();
  const int &nElectrons10();
  const int &nLepLowMT();
  const int &nTaus20();
  const int &nGammas20();
  const int &nPFCHCand3();
  const float &deltaPhiMin();
  const float &deltaPhiMin_genmet();
  const float &diffMetMht();
  const float &diffMetMht_genmet();
  const float &deltaPhiMinJECup();
  const float &deltaPhiMinJECdn();
  const float &diffMetMhtJECup();
  const float &diffMetMhtJECdn();
  const float &minMTBMet();
  const float &zll_minMTBMet();
  const float &gamma_minMTBMet();
  const float &ht();
  const float &htJECup();
  const float &htJECdn();
  const float &mt2();
  const float &mt2JECup();
  const float &mt2JECdn();
  const float &mt2_gen();
  const float &mt2_genmet();
  const float &jet1_pt();
  const float &jet2_pt();
  const float &jet1_ptJECup();
  const float &jet2_ptJECup();
  const float &jet1_ptJECdn();
  const float &jet2_ptJECdn();
  const int &jet_failFSveto();
  const float &gamma_jet1_pt();
  const float &gamma_jet2_pt();
  const float &pseudoJet1_pt();
  const float &pseudoJet1_eta();
  const float &pseudoJet1_phi();
  const float &pseudoJet1_mass();
  const float &pseudoJet2_pt();
  const float &pseudoJet2_eta();
  const float &pseudoJet2_phi();
  const float &pseudoJet2_mass();
  const float &mht_pt();
  const float &mht_phi();
  const float &mht_ptJECup();
  const float &mht_phiJECup();
  const float &mht_ptJECdn();
  const float &mht_phiJECdn();
  const float &met_pt();
  const float &met_phi();
  const float &met_ptJECup();
  const float &met_phiJECup();
  const float &met_ptJECdn();
  const float &met_phiJECdn();
  const float &met_rawPt();
  const float &met_rawPhi();
  const float &met_caloPt();
  const float &met_caloPhi();
  const float &met_trkPt();
  const float &met_trkPhi();
  const float &met_genPt();
  const float &met_genPhi();
  const float &met_miniaodPt();
  const float &met_miniaodPhi();
  const int &Flag_EcalDeadCellTriggerPrimitiveFilter();
  const int &Flag_trkPOG_manystripclus53X();
  const int &Flag_ecalLaserCorrFilter();
  const int &Flag_trkPOG_toomanystripclus53X();
  const int &Flag_hcalLaserEventFilter();
  const int &Flag_trkPOG_logErrorTooManyClusters();
  const int &Flag_trkPOGFilters();
  const int &Flag_trackingFailureFilter();
  const int &Flag_CSCTightHalo2015Filter();
  const int &Flag_CSCTightHaloFilter();
  const int &Flag_globalTightHalo2016Filter();
  const int &Flag_globalSuperTightHalo2016Filter();
  const int &Flag_HBHENoiseFilter();
  const int &Flag_HBHENoiseIsoFilter();
  const int &Flag_goodVertices();
  const int &Flag_eeBadScFilter();
  const int &Flag_ecalBadCalibFilter();
  const int &Flag_badMuonFilter();
  const int &Flag_badMuonFilterV2();
  const int &Flag_badMuons();
  const int &Flag_duplicateMuons();
  const int &Flag_noBadMuons();
  const int &Flag_badChargedCandidateFilter();
  const int &Flag_badChargedHadronFilter();
  const int &Flag_badChargedHadronFilterV2();
  const int &Flag_METFilters();
  const int &HLT_PFHT1050();
  const int &HLT_PFHT500_PFMET100_PFMHT100();
  const int &HLT_PFHT700_PFMET85_PFMHT85();
  const int &HLT_PFHT800_PFMET75_PFMHT75();
  const int &HLT_PFMET170();
  const int &HLT_PFHT300_PFMET100();
  const int &HLT_PFHT300_PFMET110();
  const int &HLT_PFHT350_PFMET100();
  const int &HLT_PFHT350_PFMET120();
  const int &HLT_PFMETNoMu90_PFMHTNoMu90();
  const int &HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90();
  const int &HLT_PFMETNoMu100_PFMHTNoMu100();
  const int &HLT_PFMETNoMu110_PFMHTNoMu110();
  const int &HLT_PFMETNoMu120_PFMHTNoMu120();
  const int &HLT_PFMETNoMu130_PFMHTNoMu130();
  const int &HLT_PFMETNoMu140_PFMHTNoMu140();
  const int &HLT_PFMET90_PFMHT90();
  const int &HLT_PFMET100_PFMHT100();
  const int &HLT_PFMET110_PFMHT110();
  const int &HLT_PFMET120_PFMHT120();
  const int &HLT_PFMET130_PFMHT130();
  const int &HLT_PFMET140_PFMHT140();
  const int &HLT_PFMET100_PFMHT100_PFHT60();
  const int &HLT_PFMET120_PFMHT120_PFHT60();
  const int &HLT_PFJet450();
  const int &HLT_PFJet500();
  const int &HLT_ECALHT800();
  const int &HLT_SingleMu();
  const int &HLT_SingleMu_NonIso();
  const int &HLT_SingleEl();
  const int &HLT_SingleEl_NonIso();
  const int &HLT_DoubleEl();
  const int &HLT_DoubleEl33();
  const int &HLT_MuX_Ele12();
  const int &HLT_Mu8_EleX();
  const int &HLT_Mu12_EleX();
  const int &HLT_Mu30_Ele30_NonIso();
  const int &HLT_Mu33_Ele33_NonIso();
  const int &HLT_Mu37_Ele27_NonIso();
  const int &HLT_Mu27_Ele37_NonIso();
  const int &HLT_DoubleMu();
  const int &HLT_DoubleMu_NonIso();
  const int &HLT_Photon120();
  const int &HLT_Photon200();
  const int &HLT_Photon175_Prescale();
  const int &HLT_Photon165_HE10();
  const int &HLT_Photon250_NoHE();
  const int &HLT_PFHT180_Prescale();
  const int &HLT_PFHT250_Prescale();
  const int &HLT_PFHT370_Prescale();
  const int &HLT_PFHT430_Prescale();
  const int &HLT_PFHT510_Prescale();
  const int &HLT_PFHT590_Prescale();
  const int &HLT_PFHT680_Prescale();
  const int &HLT_PFHT780_Prescale();
  const int &HLT_PFHT890_Prescale();
  const int &HLT_DiCentralPFJet70_PFMET120();
  const int &HLT_DiCentralPFJet55_PFMET110();
  const int &nlep();
  const float &lep_pt();
  const float &lep_eta();
  const float &lep_phi();
  const float &lep_mass();
  const int &lep_charge();
  const int &lep_pdgId();
  const float &lep_dxy();
  const float &lep_dz();
  const int &lep_tightId();
  const int &lep_heepId();
  const float &lep_highPtFit_pt();
  const float &lep_highPtFit_eta();
  const float &lep_highPtFit_phi();
  const float &lep_relIso03();
  const float &lep_relIso04();
  const float &lep_miniRelIso();
  const int &lep_mcMatchId();
  const int &lep_lostHits();
  const int &lep_convVeto();
  const int &lep_tightCharge();
  const int &nisoTrack();
  const float &isoTrack_pt();
  const float &isoTrack_eta();
  const float &isoTrack_phi();
  const float &isoTrack_mass();
  const float &isoTrack_absIso();
  const float &isoTrack_dz();
  const int &isoTrack_pdgId();
  const int &isoTrack_mcMatchId();
  const int &nhighPtPFcands();
  const float &highPtPFcands_pt();
  const float &highPtPFcands_eta();
  const float &highPtPFcands_phi();
  const float &highPtPFcands_mass();
  const float &highPtPFcands_absIso();
  const float &highPtPFcands_dz();
  const int &highPtPFcands_pdgId();
  const int &highPtPFcands_mcMatchId();
  const int &nPFLep5LowMT();
  const int &nPFHad10LowMT();
  const int &ntau();
  const float &tau_pt();
  const float &tau_eta();
  const float &tau_phi();
  const float &tau_mass();
  const int &tau_charge();
  const float &tau_dxy();
  const float &tau_dz();
  const int &tau_idCI3hit();
  const float &tau_isoCI3hit();
  const int &tau_mcMatchId();
  const int &ngamma();
  const float &gamma_pt();
  const float &gamma_eta();
  const float &gamma_phi();
  const float &gamma_mass();
  const int &gamma_mcMatchId();
  const float &gamma_genIso04();
  const float &gamma_drMinParton();
  const float &gamma_chHadIso();
  const float &gamma_neuHadIso();
  const float &gamma_phIso();
  const float &gamma_sigmaIetaIeta();
  const float &gamma_r9();
  const float &gamma_hOverE();
  const float &gamma_hOverE015();
  const int &gamma_idCutBased();
  const float &gamma_mt2();
  const int &gamma_nJet30();
  const int &gamma_nJet40();
  const int &gamma_nJet30FailId();
  const int &gamma_nJet100FailId();
  const int &gamma_nBJet20();
  const int &gamma_nBJet20csv();
  const int &gamma_nBJet20mva();
  const int &gamma_nBJet25();
  const int &gamma_nBJet30();
  const int &gamma_nBJet40();
  const float &gamma_ht();
  const float &gamma_deltaPhiMin();
  const float &gamma_diffMetMht();
  const float &gamma_mht_pt();
  const float &gamma_mht_phi();
  const float &gamma_met_pt();
  const float &gamma_met_phi();
  const int &npfPhoton();
  const float &pfPhoton_pt();
  const float &pfPhoton_eta();
  const float &pfPhoton_phi();
  const float &zll_mt2();
  const float &zll_deltaPhiMin();
  const float &zll_diffMetMht();
  const float &zll_met_pt();
  const float &zll_met_phi();
  const float &zll_mht_pt();
  const float &zll_mht_phi();
  const float &zll_mass();
  const float &zll_pt();
  const float &zll_eta();
  const float &zll_phi();
  const float &zll_ht();
  const float &zll_mt2JECup();
  const float &zll_deltaPhiMinJECup();
  const float &zll_diffMetMhtJECup();
  const float &zll_met_ptJECup();
  const float &zll_met_phiJECup();
  const float &zll_mht_ptJECup();
  const float &zll_mht_phiJECup();
  const float &zll_htJECup();
  const float &zll_mt2JECdn();
  const float &zll_deltaPhiMinJECdn();
  const float &zll_diffMetMhtJECdn();
  const float &zll_met_ptJECdn();
  const float &zll_met_phiJECdn();
  const float &zll_mht_ptJECdn();
  const float &zll_mht_phiJECdn();
  const float &zll_htJECdn();
  const float &zllmt_mt2();
  const float &zllmt_deltaPhiMin();
  const float &zllmt_diffMetMht();
  const float &zllmt_met_pt();
  const float &zllmt_met_phi();
  const float &zllmt_mht_pt();
  const float &zllmt_mht_phi();
  const float &zllmt_ht();
  const float &zllmt_mt();
  const float &rl_mt2();
  const float &rl_deltaPhiMin();
  const float &rl_diffMetMht();
  const float &rl_met_pt();
  const float &rl_met_phi();
  const float &rl_mht_pt();
  const float &rl_mht_phi();
  const float &rl_mass();
  const float &rl_pt();
  const float &rl_eta();
  const float &rl_phi();
  const float &rl_ht();
  const int &njet();
  const float &jet_pt();
  const float &jet_eta();
  const float &jet_phi();
  const float &jet_mass();
  const float &jet_btagCSV();
  const float &jet_btagMVA();
  const float &jet_chFrac();
  const float &jet_nhFrac();
  const float &jet_cemFrac();
  const float &jet_nemFrac();
  const float &jet_muFrac();
  const float &jet_rawPt();
  const float &jet_mcPt();
  const int &jet_mcFlavour();
  const int &jet_hadronFlavour();
  const float &jet_qgl();
  const float &jet_area();
  const int &jet_id();
  const int &jet_puId();
  const float &jet_muf();
  const float &weight_lepsf();
  const float &weight_lepsf_UP();
  const float &weight_lepsf_DN();
  const float &weight_lepsf_0l();
  const float &weight_lepsf_0l_UP();
  const float &weight_lepsf_0l_DN();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_UP();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_light_DN();
  const float &weight_sigtrigsf();
  const float &weight_dileptrigsf();
  const float &weight_phottrigsf();
  const float &weight_pu();
  const float &weight_isr();
  const float &weight_isr_UP();
  const float &weight_isr_DN();
  const float &weight_scales_UP();
  const float &weight_scales_DN();
  const float &weight_pdfs_UP();
  const float &weight_pdfs_DN();
  const float &weight_toppt();
  const float &genRecoil_pt();
  const float &genTop_pt();
  const float &genTbar_pt();
  const int &genProd_pdgId();
  const float &weight_pol_L();
  const float &weight_pol_R();
  const int &nisrMatch();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern CMS3 cms3;
#endif

namespace tas {
  const int &run();
  const int &lumi();
  const unsigned long long &evt();
  const int &isData();
  const int &isGolden();
  const float &evt_scale1fb();
  const float &evt_xsec();
  const float &evt_kfactor();
  const float &evt_filter();
  const unsigned long long &evt_nEvts();
  const int &evt_id();
  const float &genWeight();
  const float &puWeight();
  const int &nVert();
  const int &nTrueInt();
  const float &rho();
  const int &nJet30();
  const int &nJet30JECup();
  const int &nJet30JECdn();
  const int &nJet40();
  const int &nBJet20();
  const int &nBJet20csv();
  const int &nBJet20mva();
  const int &nBJet20JECup();
  const int &nBJet20JECdn();
  const int &nBJet25();
  const int &nBJet30();
  const int &nBJet30csv();
  const int &nBJet30mva();
  const int &nBJet40();
  const int &nJet30FailId();
  const int &nJet100FailId();
  const int &nJet20BadFastsim();
  const int &nJet200MuFrac50DphiMet();
  const int &nMuons10();
  const int &nBadMuons20();
  const int &nElectrons10();
  const int &nLepLowMT();
  const int &nTaus20();
  const int &nGammas20();
  const int &nPFCHCand3();
  const float &deltaPhiMin();
  const float &deltaPhiMin_genmet();
  const float &diffMetMht();
  const float &diffMetMht_genmet();
  const float &deltaPhiMinJECup();
  const float &deltaPhiMinJECdn();
  const float &diffMetMhtJECup();
  const float &diffMetMhtJECdn();
  const float &minMTBMet();
  const float &zll_minMTBMet();
  const float &gamma_minMTBMet();
  const float &ht();
  const float &htJECup();
  const float &htJECdn();
  const float &mt2();
  const float &mt2JECup();
  const float &mt2JECdn();
  const float &mt2_gen();
  const float &mt2_genmet();
  const float &jet1_pt();
  const float &jet2_pt();
  const float &jet1_ptJECup();
  const float &jet2_ptJECup();
  const float &jet1_ptJECdn();
  const float &jet2_ptJECdn();
  const int &jet_failFSveto();
  const float &gamma_jet1_pt();
  const float &gamma_jet2_pt();
  const float &pseudoJet1_pt();
  const float &pseudoJet1_eta();
  const float &pseudoJet1_phi();
  const float &pseudoJet1_mass();
  const float &pseudoJet2_pt();
  const float &pseudoJet2_eta();
  const float &pseudoJet2_phi();
  const float &pseudoJet2_mass();
  const float &mht_pt();
  const float &mht_phi();
  const float &mht_ptJECup();
  const float &mht_phiJECup();
  const float &mht_ptJECdn();
  const float &mht_phiJECdn();
  const float &met_pt();
  const float &met_phi();
  const float &met_ptJECup();
  const float &met_phiJECup();
  const float &met_ptJECdn();
  const float &met_phiJECdn();
  const float &met_rawPt();
  const float &met_rawPhi();
  const float &met_caloPt();
  const float &met_caloPhi();
  const float &met_trkPt();
  const float &met_trkPhi();
  const float &met_genPt();
  const float &met_genPhi();
  const float &met_miniaodPt();
  const float &met_miniaodPhi();
  const int &Flag_EcalDeadCellTriggerPrimitiveFilter();
  const int &Flag_trkPOG_manystripclus53X();
  const int &Flag_ecalLaserCorrFilter();
  const int &Flag_trkPOG_toomanystripclus53X();
  const int &Flag_hcalLaserEventFilter();
  const int &Flag_trkPOG_logErrorTooManyClusters();
  const int &Flag_trkPOGFilters();
  const int &Flag_trackingFailureFilter();
  const int &Flag_CSCTightHalo2015Filter();
  const int &Flag_CSCTightHaloFilter();
  const int &Flag_globalTightHalo2016Filter();
  const int &Flag_globalSuperTightHalo2016Filter();
  const int &Flag_HBHENoiseFilter();
  const int &Flag_HBHENoiseIsoFilter();
  const int &Flag_goodVertices();
  const int &Flag_eeBadScFilter();
  const int &Flag_ecalBadCalibFilter();
  const int &Flag_badMuonFilter();
  const int &Flag_badMuonFilterV2();
  const int &Flag_badMuons();
  const int &Flag_duplicateMuons();
  const int &Flag_noBadMuons();
  const int &Flag_badChargedCandidateFilter();
  const int &Flag_badChargedHadronFilter();
  const int &Flag_badChargedHadronFilterV2();
  const int &Flag_METFilters();
  const int &HLT_PFHT1050();
  const int &HLT_PFHT500_PFMET100_PFMHT100();
  const int &HLT_PFHT700_PFMET85_PFMHT85();
  const int &HLT_PFHT800_PFMET75_PFMHT75();
  const int &HLT_PFMET170();
  const int &HLT_PFHT300_PFMET100();
  const int &HLT_PFHT300_PFMET110();
  const int &HLT_PFHT350_PFMET100();
  const int &HLT_PFHT350_PFMET120();
  const int &HLT_PFMETNoMu90_PFMHTNoMu90();
  const int &HLT_MonoCentralPFJet80_PFMETNoMu90_PFMHTNoMu90();
  const int &HLT_PFMETNoMu100_PFMHTNoMu100();
  const int &HLT_PFMETNoMu110_PFMHTNoMu110();
  const int &HLT_PFMETNoMu120_PFMHTNoMu120();
  const int &HLT_PFMETNoMu130_PFMHTNoMu130();
  const int &HLT_PFMETNoMu140_PFMHTNoMu140();
  const int &HLT_PFMET90_PFMHT90();
  const int &HLT_PFMET100_PFMHT100();
  const int &HLT_PFMET110_PFMHT110();
  const int &HLT_PFMET120_PFMHT120();
  const int &HLT_PFMET130_PFMHT130();
  const int &HLT_PFMET140_PFMHT140();
  const int &HLT_PFMET100_PFMHT100_PFHT60();
  const int &HLT_PFMET120_PFMHT120_PFHT60();
  const int &HLT_PFJet450();
  const int &HLT_PFJet500();
  const int &HLT_ECALHT800();
  const int &HLT_SingleMu();
  const int &HLT_SingleMu_NonIso();
  const int &HLT_SingleEl();
  const int &HLT_SingleEl_NonIso();
  const int &HLT_DoubleEl();
  const int &HLT_DoubleEl33();
  const int &HLT_MuX_Ele12();
  const int &HLT_Mu8_EleX();
  const int &HLT_Mu12_EleX();
  const int &HLT_Mu30_Ele30_NonIso();
  const int &HLT_Mu33_Ele33_NonIso();
  const int &HLT_Mu37_Ele27_NonIso();
  const int &HLT_Mu27_Ele37_NonIso();
  const int &HLT_DoubleMu();
  const int &HLT_DoubleMu_NonIso();
  const int &HLT_Photon120();
  const int &HLT_Photon200();
  const int &HLT_Photon175_Prescale();
  const int &HLT_Photon165_HE10();
  const int &HLT_Photon250_NoHE();
  const int &HLT_PFHT180_Prescale();
  const int &HLT_PFHT250_Prescale();
  const int &HLT_PFHT370_Prescale();
  const int &HLT_PFHT430_Prescale();
  const int &HLT_PFHT510_Prescale();
  const int &HLT_PFHT590_Prescale();
  const int &HLT_PFHT680_Prescale();
  const int &HLT_PFHT780_Prescale();
  const int &HLT_PFHT890_Prescale();
  const int &HLT_DiCentralPFJet70_PFMET120();
  const int &HLT_DiCentralPFJet55_PFMET110();
  const int &nlep();
  const float &lep_pt();
  const float &lep_eta();
  const float &lep_phi();
  const float &lep_mass();
  const int &lep_charge();
  const int &lep_pdgId();
  const float &lep_dxy();
  const float &lep_dz();
  const int &lep_tightId();
  const int &lep_heepId();
  const float &lep_highPtFit_pt();
  const float &lep_highPtFit_eta();
  const float &lep_highPtFit_phi();
  const float &lep_relIso03();
  const float &lep_relIso04();
  const float &lep_miniRelIso();
  const int &lep_mcMatchId();
  const int &lep_lostHits();
  const int &lep_convVeto();
  const int &lep_tightCharge();
  const int &nisoTrack();
  const float &isoTrack_pt();
  const float &isoTrack_eta();
  const float &isoTrack_phi();
  const float &isoTrack_mass();
  const float &isoTrack_absIso();
  const float &isoTrack_dz();
  const int &isoTrack_pdgId();
  const int &isoTrack_mcMatchId();
  const int &nhighPtPFcands();
  const float &highPtPFcands_pt();
  const float &highPtPFcands_eta();
  const float &highPtPFcands_phi();
  const float &highPtPFcands_mass();
  const float &highPtPFcands_absIso();
  const float &highPtPFcands_dz();
  const int &highPtPFcands_pdgId();
  const int &highPtPFcands_mcMatchId();
  const int &nPFLep5LowMT();
  const int &nPFHad10LowMT();
  const int &ntau();
  const float &tau_pt();
  const float &tau_eta();
  const float &tau_phi();
  const float &tau_mass();
  const int &tau_charge();
  const float &tau_dxy();
  const float &tau_dz();
  const int &tau_idCI3hit();
  const float &tau_isoCI3hit();
  const int &tau_mcMatchId();
  const int &ngamma();
  const float &gamma_pt();
  const float &gamma_eta();
  const float &gamma_phi();
  const float &gamma_mass();
  const int &gamma_mcMatchId();
  const float &gamma_genIso04();
  const float &gamma_drMinParton();
  const float &gamma_chHadIso();
  const float &gamma_neuHadIso();
  const float &gamma_phIso();
  const float &gamma_sigmaIetaIeta();
  const float &gamma_r9();
  const float &gamma_hOverE();
  const float &gamma_hOverE015();
  const int &gamma_idCutBased();
  const float &gamma_mt2();
  const int &gamma_nJet30();
  const int &gamma_nJet40();
  const int &gamma_nJet30FailId();
  const int &gamma_nJet100FailId();
  const int &gamma_nBJet20();
  const int &gamma_nBJet20csv();
  const int &gamma_nBJet20mva();
  const int &gamma_nBJet25();
  const int &gamma_nBJet30();
  const int &gamma_nBJet40();
  const float &gamma_ht();
  const float &gamma_deltaPhiMin();
  const float &gamma_diffMetMht();
  const float &gamma_mht_pt();
  const float &gamma_mht_phi();
  const float &gamma_met_pt();
  const float &gamma_met_phi();
  const int &npfPhoton();
  const float &pfPhoton_pt();
  const float &pfPhoton_eta();
  const float &pfPhoton_phi();
  const float &zll_mt2();
  const float &zll_deltaPhiMin();
  const float &zll_diffMetMht();
  const float &zll_met_pt();
  const float &zll_met_phi();
  const float &zll_mht_pt();
  const float &zll_mht_phi();
  const float &zll_mass();
  const float &zll_pt();
  const float &zll_eta();
  const float &zll_phi();
  const float &zll_ht();
  const float &zll_mt2JECup();
  const float &zll_deltaPhiMinJECup();
  const float &zll_diffMetMhtJECup();
  const float &zll_met_ptJECup();
  const float &zll_met_phiJECup();
  const float &zll_mht_ptJECup();
  const float &zll_mht_phiJECup();
  const float &zll_htJECup();
  const float &zll_mt2JECdn();
  const float &zll_deltaPhiMinJECdn();
  const float &zll_diffMetMhtJECdn();
  const float &zll_met_ptJECdn();
  const float &zll_met_phiJECdn();
  const float &zll_mht_ptJECdn();
  const float &zll_mht_phiJECdn();
  const float &zll_htJECdn();
  const float &zllmt_mt2();
  const float &zllmt_deltaPhiMin();
  const float &zllmt_diffMetMht();
  const float &zllmt_met_pt();
  const float &zllmt_met_phi();
  const float &zllmt_mht_pt();
  const float &zllmt_mht_phi();
  const float &zllmt_ht();
  const float &zllmt_mt();
  const float &rl_mt2();
  const float &rl_deltaPhiMin();
  const float &rl_diffMetMht();
  const float &rl_met_pt();
  const float &rl_met_phi();
  const float &rl_mht_pt();
  const float &rl_mht_phi();
  const float &rl_mass();
  const float &rl_pt();
  const float &rl_eta();
  const float &rl_phi();
  const float &rl_ht();
  const int &njet();
  const float &jet_pt();
  const float &jet_eta();
  const float &jet_phi();
  const float &jet_mass();
  const float &jet_btagCSV();
  const float &jet_btagMVA();
  const float &jet_chFrac();
  const float &jet_nhFrac();
  const float &jet_cemFrac();
  const float &jet_nemFrac();
  const float &jet_muFrac();
  const float &jet_rawPt();
  const float &jet_mcPt();
  const int &jet_mcFlavour();
  const int &jet_hadronFlavour();
  const float &jet_qgl();
  const float &jet_area();
  const int &jet_id();
  const int &jet_puId();
  const float &jet_muf();
  const float &weight_lepsf();
  const float &weight_lepsf_UP();
  const float &weight_lepsf_DN();
  const float &weight_lepsf_0l();
  const float &weight_lepsf_0l_UP();
  const float &weight_lepsf_0l_DN();
  const float &weight_btagsf();
  const float &weight_btagsf_heavy_UP();
  const float &weight_btagsf_light_UP();
  const float &weight_btagsf_heavy_DN();
  const float &weight_btagsf_light_DN();
  const float &weight_sigtrigsf();
  const float &weight_dileptrigsf();
  const float &weight_phottrigsf();
  const float &weight_pu();
  const float &weight_isr();
  const float &weight_isr_UP();
  const float &weight_isr_DN();
  const float &weight_scales_UP();
  const float &weight_scales_DN();
  const float &weight_pdfs_UP();
  const float &weight_pdfs_DN();
  const float &weight_toppt();
  const float &genRecoil_pt();
  const float &genTop_pt();
  const float &genTbar_pt();
  const int &genProd_pdgId();
  const float &weight_pol_L();
  const float &weight_pol_R();
  const int &nisrMatch();
}
#endif
